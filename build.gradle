plugins {
    id 'fabric-loom' version "${loom_version}"
}

group = project.group
version = project.mod_version

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
    maven { url 'https://maven.terraformersmc.com/releases' }
    maven { url 'https://maven.isxander.dev/releases' }
    maven {
        name 'Xander Maven'
        url 'https://maven.isxander.dev/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_api_version}"
    implementation "com.google.code.gson:gson:2.10.1"
    implementation 'com.github.twitch4j:twitch4j:1.25.0'
    modImplementation("dev.isxander:yet-another-config-lib:${project.yacl_version}")
    modCompileOnly "com.terraformersmc:modmenu:11.0.0"
    modRuntimeOnly "com.terraformersmc:modmenu:11.0.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(project.java_version as int)
    }
    withSourcesJar()
}

loom {
    splitEnvironmentSourceSets()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = project.java_version as int
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand([
                version: project.version
        ])
    }
}

